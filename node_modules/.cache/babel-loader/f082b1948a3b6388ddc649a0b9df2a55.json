{"ast":null,"code":"var _jsxFileName = \"/Users/MacBook/Documents/GitHub/React/Task-test/src/components/MovieImport.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addMovie } from '../redux/MovieSlice';\nimport { ImportContainer, FileInput } from './MovieImport.styled';\nimport { parseMoviesFile } from '../components/parseMovie.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieImport = () => {\n  _s();\n  const dispatch = useDispatch();\n  const handleFileChange = async e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n    const text = await file.text();\n    const movies = parseMoviesFile(text);\n    movies.forEach(movie => dispatch(addMovie(movie)));\n  };\n  return /*#__PURE__*/_jsxDEV(ImportContainer, {\n    children: /*#__PURE__*/_jsxDEV(FileInput, {\n      type: \"file\",\n      accept: \".txt\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieImport, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = MovieImport;\nexport default MovieImport;\nvar _c;\n$RefreshReg$(_c, \"MovieImport\");","map":{"version":3,"names":["React","useDispatch","addMovie","ImportContainer","FileInput","parseMoviesFile","jsxDEV","_jsxDEV","MovieImport","_s","dispatch","handleFileChange","e","_e$target$files","file","target","files","text","movies","forEach","movie","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/MacBook/Documents/GitHub/React/Task-test/src/components/MovieImport.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addMovie } from '../redux/MovieSlice';\nimport { ImportContainer, FileInput } from './MovieImport.styled';\n\nimport { parseMoviesFile } from '../components/parseMovie.jsx';\n\nconst MovieImport = () => {\n  const dispatch = useDispatch();\n\n  const handleFileChange = async e => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n    const text = await file.text();\n    const movies = parseMoviesFile(text);\n    movies.forEach(movie => dispatch(addMovie(movie)));\n  };\n\n  return (\n    <ImportContainer>\n      <FileInput type=\"file\" accept=\".txt\" onChange={handleFileChange} />\n    </ImportContainer>\n  );\n};\n\nexport default MovieImport;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,eAAe,EAAEC,SAAS,QAAQ,sBAAsB;AAEjE,SAASC,eAAe,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,gBAAgB,GAAG,MAAMC,CAAC,IAAI;IAAA,IAAAC,eAAA;IAClC,MAAMC,IAAI,IAAAD,eAAA,GAAGD,CAAC,CAACG,MAAM,CAACC,KAAK,cAAAH,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC;IAChC,IAAI,CAACC,IAAI,EAAE;IACX,MAAMG,IAAI,GAAG,MAAMH,IAAI,CAACG,IAAI,CAAC,CAAC;IAC9B,MAAMC,MAAM,GAAGb,eAAe,CAACY,IAAI,CAAC;IACpCC,MAAM,CAACC,OAAO,CAACC,KAAK,IAAIV,QAAQ,CAACR,QAAQ,CAACkB,KAAK,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,oBACEb,OAAA,CAACJ,eAAe;IAAAkB,QAAA,eACdd,OAAA,CAACH,SAAS;MAACkB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAEb;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEtB,CAAC;AAACnB,EAAA,CAhBID,WAAW;EAAA,QACEP,WAAW;AAAA;AAAA4B,EAAA,GADxBrB,WAAW;AAkBjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}