{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    contacts: [],\n    filter: ''\n  },\n  reducers: {\n    addContact: {\n      reducer(state, action) {\n        state.contacts.push(action.payload);\n      },\n      prepare(name, number) {\n        return {\n          payload: {\n            id: nanoid(),\n            name,\n            number\n          }\n        };\n      }\n    },\n    deleteContact(state, action) {\n      state.contacts = state.contacts.filter(contact => contact.id !== action.payload);\n    },\n    setFilter(state, action) {\n      state.filter = action.payload;\n    }\n  }\n});\nexport const {\n  addContact,\n  deleteContact,\n  setFilter\n} = contactsSlice.actions;\nexport const contactReducer = contactsSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","contactsSlice","name","initialState","contacts","filter","reducers","addContact","reducer","state","action","push","payload","prepare","number","id","deleteContact","contact","setFilter","actions","contactReducer"],"sources":["/Users/MacBook/Documents/GitHub/React/Task-test/src/redux/contactSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: { contacts: [], filter: '' },\n  reducers: {\n    addContact: {\n      reducer(state, action) {\n        state.contacts.push(action.payload);\n      },\n      prepare(name, number) {\n        return {\n          payload: {\n            id: nanoid(),\n            name,\n            number,\n          },\n        };\n      },\n    },\n    deleteContact(state, action) {\n      state.contacts = state.contacts.filter(\n        contact => contact.id !== action.payload\n      );\n    },\n    setFilter(state, action) {\n      state.filter = action.payload;\n    },\n  },\n});\n\nexport const { addContact, deleteContact, setFilter } = contactsSlice.actions;\nexport const contactReducer = contactsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,QAAQ;AAE/B,MAAMC,aAAa,GAAGF,WAAW,CAAC;EAChCG,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC;EAC1CC,QAAQ,EAAE;IACRC,UAAU,EAAE;MACVC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;QACrBD,KAAK,CAACL,QAAQ,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MACrC,CAAC;MACDC,OAAOA,CAACX,IAAI,EAAEY,MAAM,EAAE;QACpB,OAAO;UACLF,OAAO,EAAE;YACPG,EAAE,EAAEf,MAAM,CAAC,CAAC;YACZE,IAAI;YACJY;UACF;QACF,CAAC;MACH;IACF,CAAC;IACDE,aAAaA,CAACP,KAAK,EAAEC,MAAM,EAAE;MAC3BD,KAAK,CAACL,QAAQ,GAAGK,KAAK,CAACL,QAAQ,CAACC,MAAM,CACpCY,OAAO,IAAIA,OAAO,CAACF,EAAE,KAAKL,MAAM,CAACE,OACnC,CAAC;IACH,CAAC;IACDM,SAASA,CAACT,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACJ,MAAM,GAAGK,MAAM,CAACE,OAAO;IAC/B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL,UAAU;EAAES,aAAa;EAAEE;AAAU,CAAC,GAAGjB,aAAa,CAACkB,OAAO;AAC7E,OAAO,MAAMC,cAAc,GAAGnB,aAAa,CAACO,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}